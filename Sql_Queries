SELECT * FROM zero.walmart;
use zero;
select count(*) from walmart;
select count(distinct payment_method) from walmart;
select payment_method,round(sum(total),2) as total_revenue from walmart group by payment_method;
select count(distinct branch) from walmart;
select count(distinct category) from walmart;
select round(sum(unit_price*quantity),2) as total_revenue from walmart;
select branch,round(sum(unit_price*quantity),2) as revenue from walmart
group by branch order by revenue desc;


select city,count(distinct branch) as total_branch from walmart
group by city order by total_branch desc limit 10;

select category,round(sum(unit_price*quantity),2) as revenue from walmart
group by category order by revenue desc;

select category,sum(quantity) as total_quantity from walmart group by category
order by total_quantity desc;
select round(avg(unit_price*quantity),2) as avgerage from walmart;
select date, sum(unit_price * quantity) as daily_revenue
from walmart group by date order by date desc limit 5;

select date_format(STR_TO_DATE(date, '%d/%m/%y'), '%Y-%m') AS monthly_revenue, 
SUM(quantity) AS total_sales from walmart group by monthly_revenue;

select hour(time) as hour, sum(quantity) as total_quantity
from walmart group by hour order by total_quantity desc limit 5;

select case
    when hour(time) between 6 and 11 then 'Morning'
    when hour(time) between 12 and 17 then 'Afternoon'
    else 'Evening' end as time_of_day,
    count(*) AS total_transactions from walmart group by time_of_day;
    
select dayname(str_to_date(date, '%d/%m/%y')) as day_of_week, count(*) as transaction_count
from walmart group by day_of_week;

select category, round(avg(profit_margin * unit_price * quantity),2) as avg_profit
from walmart group by category order by avg_profit desc;

select (profit_margin * unit_price * quantity) as avg_profit_per_txn from walmart;

select Branch, round(sum(profit_margin * unit_price * quantity),2) AS top10_total_profit
from walmart group by Branch order by top10_total_profit desc limit 10;

select Branch, round(sum(profit_margin * unit_price * quantity),2) AS total_profit
from walmart group by Branch order by total_profit  limit 10;

select payment_method,count(*) as count from walmart 
group by payment_method order by count desc;

SELECT Branch, category, count(*) AS category_count
from walmart group by Branch, category order by Branch, category_count desc;

select Branch, round(avg(rating),2)as avg_rating
from walmart group by  Branch order by avg_rating desc limit 10;

SELECT category, round(avg(rating),2) as avg_rating
from walmart group by category order by avg_rating limit 1;

select category, DATE_FORMAT(STR_TO_DATE(date, '%d/%m/%y'), '%Y-%m') as month, 
       round(sum(profit_margin * unit_price * quantity),2) as monthly_profit
from walmart group by category, month order by category, month;

select branch, count(*) as total_transactions
from walmart group by Branch order by branch;

SELECT category, 
round(sum(unit_price * quantity) / (select sum(unit_price * quantity) from walmart) * 100, 2) as revenue_pct
from walmart group by category order by revenue_pct;

select  case
    when unit_price between 0 and 20 then '0-20'
    when unit_price between 21 and 50 then '21-50'
    when unit_price between 51 and 100 then '51-100'
    else '100+' end as price_range,
count(*) as count from walmart group by price_range;

select case 
    when hour(time) between 6 and 11 then 'Morning'
    when hour(time) between 12 and 17 then 'Afternoon'
    else'Evening' end as time_slot,round(avg(rating),2) as avg_rating
from walmart group by time_slot order by avg_rating desc;

SELECT city, payment_method, count(*) as method_count
from walmart group by city, payment_method order by city, method_count desc;

select invoice_id, (unit_price * quantity * profit_margin) as profit
from walmart order by profit desc limit 1;

select Branch, category, sum(unit_price * quantity) as revenue, sum(quantity) as Quantity
from walmart group by  Branch, category;

select branch, floor(rating) AS rating_group, count(*) AS count
from walmart group by branch, rating_group order by branch, rating_group;

select week(STR_TO_DATE(date, '%d/%m/%y')) as week_number,
round(SUM(unit_price * quantity),2) AS weekly_revenue
from walmart group by week_number order by week_number;

select count(*) from walmart
where  quantity > (select avg(quantity) from walmart);

select branch, count(*) AS high_rated_txns from walmart
where rating >= 9 group by branch order by high_rated_txns DESC;

select branch, DATE_FORMAT(STR_TO_DATE(date, '%d/%m/%y'), '%Y-%m') as month,
round(sum(profit_margin * unit_price * quantity),2) AS monthly_profit
from walmart group by branch, month order by branch, month;

select category, payment_method, COUNT(*) as count
from walmart group by category, payment_method order by category, count desc;

select  branch, round(sum(unit_price * quantity),2) AS cash_revenue
from walmart where payment_method = 'Cash' group by branch
order by  cash_revenue desc limit 10;

select payment_method, category, count(*) AS count
from walmart group by payment_method, category
order by payment_method, count desc;

SELECT city, avg(unit_price * quantity * profit_margin) AS avg_profit
from walmart group by city order by avg_profit desc;

select date, SUM(unit_price * quantity) as revenue
from walmart group by date order by revenue asc limit 10;

select branch, MIN(rating) as min_rating, MAX(rating) as max_rating, round(avg(rating),2) as avg_rating
from walmart group by branch;

select count(*) as high_quantity_txns from walmart where  quantity = 10;

select category, DATE_FORMAT(STR_TO_DATE(date, '%d/%m/%y'), '%Y-%m') AS month, count(*) as txn_count
from walmart group by category, month;

(select * from walmart order by unit_price desc limit 1)
union all
(select * from walmart order by unit_price asc limit 1);


select replace(payment_method,"Cash","Money") from walmart;
select left(date,2) as aa from walmart;
select trim(category) from walmart;
select invoice_id,branch,city,category,unit_price,total,row_number() over(partition by category order by total desc) as rn
from walmart;
select invoice_id,branch,city,category,unit_price,total, unit_price-lag(unit_price) over(partition by category order by unit_price) from walmart;
select invoice_id,branch,city,category,unit_price,total, sum(unit_price) over(partition by category order by invoice_id) from walmart;

select invoice_id,branch,city,unit_price,round(sum(unit_price) over(order by invoice_id),2) as rn from walmart;

SELECT invoice_id, branch, date, total,
       round(SUM(total) OVER (ORDER BY invoice_id),2) AS cumulative_total
FROM walmart;

SELECT date, total,
       SUM(total) OVER (ORDER BY date) AS cumulative_total
FROM walmart;

/*SELECT category, date, total,
       SUM(total) OVER (PARTITION BY category ORDER BY date) AS cumulative_total
FROM walmart;

SELECT category, date, total,
       SUM(total) OVER (PARTITION BY branch ORDER BY date) AS cumulative_total
FROM walmart;
select * from walmart;*/


